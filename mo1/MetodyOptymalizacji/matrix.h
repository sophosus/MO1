//Do not edit this file (unless you know what you are doing)

#ifndef MATRIX_H
#define MATRIX_H

#include<iostream>
using namespace std;

class matrix
{
	int n, m; //dla m = 1 jest to wektor
	double **M;
	friend matrix operator+(const matrix &, const matrix &); // throw (char*);
	friend matrix operator-(const matrix &, const matrix &); // throw (char*);
	friend matrix operator*(const matrix &, const matrix &); // throw (char*);
	friend matrix operator/(const matrix &, double);
	friend matrix operator-(const matrix &);
	//operatory porownania dzialaja tylko dla liczb czyli macierzy 1x1
	friend bool operator<(const matrix &, const matrix &); // throw (char*);
	friend bool operator>(const matrix &, const matrix &); // throw (char*);
	friend bool operator<=(const matrix &, const matrix &); // throw (char*);
	friend bool operator>=(const matrix &, const matrix &); // throw (char*);
	friend bool operator==(const matrix &, const matrix &); // throw (char*);
	friend bool operator!=(const matrix &, const matrix &); // throw (char*);
	friend matrix unit_mat(int = 1); // throw (char*);
	//np. A=set_col(A,v,i)
	friend matrix set_col(const matrix &, matrix &, int); // throw (char*);
	//wyznacznik
	friend double det(const matrix &); // throw (char*);
	//macierz odwrotna
	friend matrix inv(const matrix &); // throw (char*);
	friend matrix trans(const matrix &);
	//norma tylko z wektorow i skalarow
	friend double norm(const matrix &); // throw (char*);
	//zwraca n i m czyli rozmiar
	friend int *get_size(const matrix &);
	//zapis i wczytanie z pliku
	friend ostream &operator<<(ostream &, const matrix &);
	friend istream &operator>>(istream &, matrix &); // throw (char*);
public:
	//zwraca macierz wyzerowana
	matrix(int = 1, int = 1); // throw (char*);
	//zwraca macierz 1x1 z doublem w srodku
	matrix(double);
	//zwraca wektor
	matrix(double *, int); // throw (char*);
	//macierz
	matrix(double **, int, int); // throw (char*);

	matrix(const matrix &);
	~matrix();
	matrix &operator=(const matrix &);
	//zwraca kolumne macierzy
	matrix operator[](int) const; // throw (char*);
	//zwraca element (i,j), mozna napisac np A(i,j)=5 wtedy 5 zostanie wpisane do macierzy
	double &operator()(int, int = 0); // throw (char*);
};

#endif